# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12fo6PE_8xwVFbJl0AfRGaPNaXYuPhVQ6
"""

import streamlit as st
from PIL import Image
from model_utils import load_model, predict_image
from image_utils import is_blurry_or_blank
from explain_utils import get_gradcam

# Title
st.set_page_config(page_title="VisionTagger", layout="centered")
st.title("üëó VisionTagger: Smart Product Image Tagging")

# Load model + labels
model, label_map = load_model()

# Upload image
uploaded_file = st.file_uploader("Upload a product image", type=["png", "jpg", "jpeg"])

if uploaded_file:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="Uploaded Image", use_container_width=True)

    # Check if image is blurry or blank
    flagged, reason = is_blurry_or_blank(image)
    if flagged:
        st.error(f"‚ö†Ô∏è Image rejected: {reason}")
    else:
        # Predict
        with st.spinner("Analyzing image..."):
            pred_class, conf = predict_image(image, model, label_map)
            st.success(f"‚úÖ Predicted Tag: **{pred_class}** ({conf*100:.2f}% confidence)")

            # Grad-CAM
            gradcam_image = get_gradcam(image, model)
            st.image(gradcam_image, caption="üîç Grad-CAM Explanation", use_container_width=True)